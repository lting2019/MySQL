################################
###（1）numpy构建矩阵
#(1.1)将一个列表[1,3,5,7,9]传入矩阵arr1
import numpy as np
arr1=np.array([1,3,5,7,9])
print(arr1,'\n')

ls=[1,3,5,7]
arr2=np.array(ls)
print(arr2,'\n')

#(1.2)将元组（2,4,6，8）传入矩阵arr3
a=(2,4,6,8)
arr3=np.array(a)
print(arr3,'\n')

#(1.3)将嵌套列表[[1,2,3],[10,20,30],[100,200,300],[1,10,100]]传入矩阵arr4
a=[[1,2,3],[10,20,30],[100,200,300],[1,10,100]]
arr4=np.array(a)
print(arr4,'\n')

#(1.4)获取arr1和arr4的行列数
print(arr1.shape,'\n',arr4.shape,'\n')

#(1.5)求arr4每行的均值
p=np.apply_along_axis(func1d=np.mean,axis=1,arr=arr4)
print(p,'\n')

'''参数func1d中的1是1234的1，axis=0表示列，axis=1表示行'''
#（1.6）求arr4每列的均值
s=np.apply_along_axis(func1d=np.mean,axis=0,arr=arr4)
print(s,'\n')

#########################################
###(2)查找矩阵的元素
#（2.1）查找arr3的第二个元素
print(arr3,'\n')
print(arr3[1],'\n')

#(2.2)查找arr4的第二行数据
print(arr4[1])

#(2.3)查找arr4的第2列数据
print(arr4[:,1])

#(2.4)查找arr4的第2和第3列数据
print(arr4[:,[1,2]])

#(2.5)查找arr4第2行第3列的交叉位置的数据
print(arr4[1,2])

#(2.6)查找arr4中坐标为（0,1）和（2,2）的两个数据
print(arr4[[0,2],[1,2]])

#（2.7）查找arr4中横坐标范围为0:2，纵坐标范围为1:2的子数据
#方法一：两次索引
print(arr4[[0,1,2],:][:,[1,2]],'\n')
#方法二：np.ix_函数
print(arr4[np.ix_([0,2],[1,2])],'\n')

#######################################
###(3)随机数生成
#（3.1）生成随机种子为123，二项分布的（n=10，p=0.2）,样本大小为10的数据
np.random.seed(123)
r1=np.random.binomial(n=10,p=0.2,size=(10))
print(r1,'\n')

#（3.2）生成随机种子为123，二项分布的（n=10，p=0.2）,样本大小为(3,5)的数据
r2=np.random.binomial(n=10,p=0.2,size=(3,5))
print(r2,'\n')

#(3.3)某事件在单位时间内平均发生的次数为6，求样本大小为10的泊松分布，样本种子为1
np.random.seed(1)
r3=np.random.poisson(lam=6,size=10)
print(r3,'\n')

#（3.4）某事件在单位时间内平均发生的次数分别为10,20,30，求样本大小为5的泊松分布，样本种子为1
r4=np.random.poisson(lam=(10,20,30),size=(5,3))
print(r4,'\n')

#（3.5）生成正态分布（均值为2，标准差为3），种子为2,样本大小为10的随机数据
r5=np.random.normal(loc=2,scale=3,size=10)
print(r5,'\n')

#（3.6）生成正态分布（均值为2，标准差为3），种子为2,样本大小为(3,5)的随机数据
r6=np.random.normal(loc=2,scale=3,size=(3,5))
print(r6,'\n')

#(3.7)生成自由度为3的t分布数据，种子为3
r7=np.random.standard_t(df=3,size=(2,3))
print(r7,'\n')

#(3.8)生成自由为2,5的f分布
r8=np.random.f(dfnum=2,dfden=5,size=(3,5))
print(r8,'\n')

#生成1到10之间的均匀均布，并四舍五入取整
r9=np.round(np.random.uniform(size=(3,4),low=1,high=10),0)
print(r9,'\n')

################################################
###（4）数据加载
#(4.1)加载'D:\222学习\数据分析案例资料\鸢尾花数据.txt'的数据
#方法一：
data1=np.genfromtxt(fname=r'D:\222学习\数据分析案例资料\002.txt',
               delimiter=' ',skip_header=0,usecols=[1])
print(data1)

#方法二：
data2=np.loadtxt(fname=r'D:\222学习\数据分析案例资料\002.txt',delimiter=' ',skiprows=0)
print(data2)
################################################
###(5)数据写出
#（5.1）输出数据[[1,2,3],[2,3,5],[5,6,7]]
a=[[1,2,3],[2,3,4],[5,6,7]]
arr0=np.array(a)
print(arr0,'\n')
np.savetxt(r'D:\222学习\数据分析案例资料\002.txt',arr0,fmt='%d',delimiter=' ',
           newline='\n',header='', footer='', comments='# ')
