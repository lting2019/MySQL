######################################################
###(1)将时间文本转化为时间格式
dt='2017/04/04 22:09:48'
d='2017-04-24'

########################
import datetime
d1=datetime.datetime.strptime(dt,'%Y/%m/%d %H:%M:%S')
d2=datetime.datetime.strptime(d,'%Y-%m-%d')
print(d1,'\n')
print(d2,'\n')
d3=d2.date()
print(d3,'\n')


###############################################
###(2）列表——查询
ls=[1,2,3,'a','b','c','2017-04-24 23:09:48']

#########################
#（1）获取第一个元素
print(ls[0])
#（2）获取第一和第二个元素
print(ls[0:1])
#(3)获取前4个元素
print(ls[:4])
#(4)获取从第4个元素开始到后面的所有元素
print(ls[3:])
#(5)获取倒数第一个元素
print(ls[-1])
#(6)从倒数第三个开始到后面的所有元素
print(ls[-3:])
#(7)将列表倒数获取
print(ls[::-1])
#(8)按步长为2获取元素
print(ls[::2])

################################################################
###(3)列表——增删改&其他方法
ls=[1,2,3,'a','b','c','2017-04-24 23:09:48']

#########################
#(1)在末尾插入一个元素‘sim’
ls.append('sim')
#(2)在末尾插入多个元素'lily','lucy'
ls.extend(['lily','lucy'])
#(3)在指定位置插入元素，在第三个位置插入-20
ls.insert(2,-20)
print(ls,'\n')

#########################
#(4)删除末尾一个元素
ls.pop()
#(5)删除指定位置的一个元素，删除第三个元素
ls.pop(2)
#（6）删除指定的数据‘sim’
ls.remove('sim')

#########################
#(7)复制列表ls为列表ls2
ls2=ls.copy()
print(ls2,'\n')
#(8)清除列表ls2的所有元素
ls2.clear()
print(ls2,'\n')
#(9)删除列表ls2
del ls2

###########################
print(ls,'\n')
#(10)将列表中的3改为30
ls[2]=33
print(ls,'\n')
#(11)将第四到第六个元素改为‘d’，‘e’，‘f’
ls[3:6]=['d','e','f']
print(ls,'\n')

############################
#(12)查找某个元素的索引位置，如33
print(ls.index('e'),'\n')
#(13)查找某个元素在列表中的个数，如‘f’
print(ls.count('f'),'\n')
#(14)列表逆序l
ls.reverse()
print(ls)
#(15)列表元素升序排序
ls=['d','f','s','d','f','t']
ls.sort()
print(ls)
#(16)列表元素降序排序
ls.sort(reverse=True)
print(ls)

'''总结：1、列表中的元素若数据类型不同，则不可排序
         2、列表的reverse方法、sort方法直接改变原列表'''

######################################
###(4)元组
t=(1,2,3,'a','cb','a','lsx')

'''元组查询和列表一样'''
#(1)查询元组中元素‘a’的个数
print(t.count('a'))
#(2)查询元素‘a’的索引位置
print(t.index('a'))
#(3)复制元组t为t2
import copy
t2=copy.copy(t)
print(t2)

'''总结：元组的复制需要copy模块中的copy函数'''


############################################
###（5）字典
#（1）创建字典{'id':[1,2,3,4],'name':['a','b','c','d'],'age':[20,30,,27,28]}
#方法一
dict1={'id':[1,2,3,4],'name':['a','b','c','d'],'age':[20,30,27,28]}
#方法二
dict2=dict(id=[1,2,3,4],name=['a','b','c','d'],age=[20,30,27,28])
print(dict1,'\n')
print(dict2,'\n')

#(2)创建嵌套字典{'name':'lucy','score':{'yw':80,'sx':85,'yy':90}}
dict3=dict(name='lucy',score={'yw':80,'sx':85,'yy':90})
print(dict3,'\n')

'''dict函数中key值不用引号'''

#########################
#（3）查找某个字典中某个键的对应的值，如dict1字典中的id的值
#方法一
print(dict1['id'],'\n')
#方法二
print(dict1.get('id'),'\n')
#方法三
print(dict1.setdefault('id'))

################################
#(4)字典增加键值对，如字典dict1增加{‘age’:[0,0,0,0]}
#方法一
dict1.setdefault('age2',[0,0,0,0])
print(dict1,'\n')

#方法二
dict1['age3']=[1,11,1,1]
print(dict1,'\n')

#方法三
dict1.update({'age4':[2,2,2,2]})
print(dict1,'\n')

'''总结：setdefault函数可以做查询和增加键'''

#########################
#(5)删除指定键值对age2
dict1.pop('age2')
print(dict1,'\n')

#(6)删除末尾键值对
dict1.popitem()
print(dict1,'\n')

###################
#（7）修改dict3中的name值为sim
#方法一
dict3['name']='sim'
print(dict3,'\n')
#方法二
dict3.update({'score':{'su':45,'yw':80}})
print(dict3,'\n')

####################
#(8)罗列字典dict1中的所有键值对
print(list(dict1.items()),'\n')

#(9)罗列字典dict1中的所有键
print(list(dict1.keys()),'\n')

#(10)罗列字典dict1中的所有值
print(list(dict1.values()),'\n')

#(11)复制字典dict1为dict4
dict4=dict1.copy()
print(dict4,'\n')

'''总结：罗列字典的所有键值对、键、值都要用list函数来形成列表，否则为迭代器'''
